"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _Hotkeys = _interopRequireDefault(require("./Hotkeys.css"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
// @todo: refactor to functional component
class Hotkeys extends _react.default.PureComponent {
  render() {
    var _this$props = this.props,
      keys = _this$props.keys,
      size = _this$props.size;
    if (!keys || keys.length === 0) {
      return /*#__PURE__*/_react.default.createElement("span", null);
    }
    return /*#__PURE__*/_react.default.createElement("span", {
      className: _Hotkeys.default.root,
      "data-size": size
    }, keys.map((key, i) =>
    /*#__PURE__*/
    // eslint-disable-next-line react/no-array-index-key
    _react.default.createElement("span", {
      className: _Hotkeys.default.key,
      key: i
    }, key)));
  }
}
exports.default = Hotkeys;
_defineProperty(Hotkeys, "defaultProps", {
  size: undefined
});