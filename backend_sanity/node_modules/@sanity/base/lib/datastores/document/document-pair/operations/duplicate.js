"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.duplicate = void 0;
var _omit2 = _interopRequireDefault(require("lodash/omit"));
var _versionedClient = require("../../../../client/versionedClient");
var _draftUtils = require("../../../../util/draftUtils");
var _isLiveEditEnabled = require("../utils/isLiveEditEnabled");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var omitProps = ['_createdAt', '_updatedAt'];
var duplicate = {
  disabled: _ref => {
    var snapshots = _ref.snapshots;
    return snapshots.published || snapshots.draft ? false : 'NOTHING_TO_DUPLICATE';
  },
  execute: (_ref2, baseDocumentId) => {
    var snapshots = _ref2.snapshots,
      typeName = _ref2.typeName;
    var source = snapshots.draft || snapshots.published;
    return _versionedClient.versionedClient.create(_objectSpread(_objectSpread({}, (0, _omit2.default)(source, omitProps)), {}, {
      _id: (0, _isLiveEditEnabled.isLiveEditEnabled)(typeName) ? baseDocumentId : (0, _draftUtils.getDraftId)(baseDocumentId),
      _type: source._type
    }), {
      tag: 'document.duplicate'
    });
  }
};
exports.duplicate = duplicate;