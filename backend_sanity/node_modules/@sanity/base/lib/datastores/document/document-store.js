"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _draftUtils = require("../../util/draftUtils");
var _versionedClient = require("../../client/versionedClient");
var _checkoutPair2 = require("./document-pair/checkoutPair");
var _createDeprecatedAPIs = _interopRequireDefault(require("./_createDeprecatedAPIs"));
var _resolveTypeForDocument = require("./resolveTypeForDocument");
var _listenQuery = require("./listenQuery");
var _editState2 = require("./document-pair/editState");
var _editOperations2 = require("./document-pair/editOperations");
var _documentEvents2 = require("./document-pair/documentEvents");
var _validation2 = require("./document-pair/validation");
var _operationEvents2 = require("./document-pair/operationEvents");
var _consistencyStatus2 = require("./document-pair/consistencyStatus");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function getIdPairFromPublished(publishedId) {
  if ((0, _draftUtils.isDraftId)(publishedId)) {
    throw new Error('editOpsOf does not expect a draft id.');
  }
  return {
    publishedId,
    draftId: (0, _draftUtils.getDraftId)(publishedId)
  };
}
var _default = _objectSpread(_objectSpread({}, (0, _createDeprecatedAPIs.default)(_versionedClient.versionedClient)), {}, {
  // Todo: can be removed in ~january 2020
  checkoutPair: idPair => (0, _checkoutPair2.checkoutPair)(idPair),
  listenQuery: _listenQuery.listenQuery,
  resolveTypeForDocument: _resolveTypeForDocument.resolveTypeForDocument,
  pair: {
    editState: (publishedId, type) => (0, _editState2.editState)(getIdPairFromPublished(publishedId), type),
    editOperations: (publishedId, type) => (0, _editOperations2.editOperations)(getIdPairFromPublished(publishedId), type),
    documentEvents: (publishedId, type) => (0, _documentEvents2.documentEvents)(getIdPairFromPublished(publishedId), type),
    validation: (publishedId, type) => (0, _validation2.validation)(getIdPairFromPublished(publishedId), type),
    operationEvents: (publishedId, type) => (0, _operationEvents2.operationEvents)(getIdPairFromPublished(publishedId), type),
    consistencyStatus: (publishedId, type) => (0, _consistencyStatus2.consistencyStatus)(getIdPairFromPublished(publishedId), type)
  }
});
exports.default = _default;