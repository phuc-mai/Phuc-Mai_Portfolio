{"version":3,"file":"index.esm.js","sources":["../../src/legacy/types/constants.ts","../../src/legacy/types/any.ts","../../src/legacy/preview/primitivePreview.ts","../../src/legacy/types/string.ts","../../src/legacy/types/text.ts","../../src/legacy/types/datetime.ts","../../src/legacy/types/date.ts","../../src/legacy/types/boolean.ts","../../src/legacy/types/url.ts","../../src/legacy/types/email.ts","../../src/legacy/types/number.ts","../../src/legacy/types/utils.ts","../../src/legacy/preview/JSONStringifyHuman.ts","../../src/legacy/preview/fallbackPrepare.ts","../../src/legacy/preview/portableText.ts","../../src/legacy/preview/guessPreviewConfig.ts","../../src/legacy/preview/deprecationUtils.ts","../../src/legacy/preview/createPreviewGetter.ts","../../src/legacy/ordering/guessOrderingConfig.ts","../../src/legacy/searchConfig/normalize.ts","../../src/legacy/searchConfig/resolve.ts","../../src/legacy/types/object.ts","../../src/legacy/types/reference.ts","../../src/legacy/types/crossDatasetReference.ts","../../src/legacy/types/image/fieldDefs.ts","../../src/legacy/types/image.ts","../../src/legacy/types/file.ts","../../src/legacy/types/document.ts","../../src/legacy/types/array.ts","../../src/legacy/types/blocks/defaults.ts","../../src/legacy/types/blocks/block.ts","../../src/legacy/types/blocks/span.ts","../../src/legacy/Schema.ts"],"sourcesContent":["export const DEFAULT_OVERRIDEABLE_FIELDS = [\n  'jsonType',\n  'type',\n  'name',\n  'title',\n  'description',\n  'options',\n  'fieldsets',\n  'validation',\n  'readOnly',\n  'hidden',\n  'components',\n  'diffComponent',\n  'initialValue',\n]\n","import {pick, omit} from 'lodash'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ANY_CORE = {\n  name: 'any',\n  type: null,\n  jsonType: 'any',\n}\n\nexport const AnyType = {\n  get() {\n    return ANY_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const parsed = Object.assign(pick(ANY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: ANY_CORE,\n      of: subTypeDef.of.map((fieldDef) => {\n        return {\n          name: fieldDef.name,\n          type: extendMember(omit(fieldDef, 'name')),\n        }\n      }),\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export default {\n  prepare: (val) => ({title: String(val)}),\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst STRING_CORE = {\n  name: 'string',\n  title: 'String',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const StringType = {\n  get() {\n    return STRING_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(STRING_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: STRING_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS, 'rows']\n\nconst TEXT_CORE = {\n  name: 'text',\n  title: 'Text',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const TextType = {\n  get() {\n    return TEXT_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(TEXT_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: TEXT_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATETIME_CORE = {\n  name: 'datetime',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateTimeType = {\n  get() {\n    return DATETIME_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(DATETIME_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: DATETIME_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATE_CORE = {\n  name: 'date',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateType = {\n  get() {\n    return DATE_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(DATE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: DATE_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst BOOLEAN_CORE = {\n  name: 'boolean',\n  title: 'Boolean',\n  type: null,\n  jsonType: 'boolean',\n}\n\nexport const BooleanType = {\n  get() {\n    return BOOLEAN_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(BOOLEAN_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: BOOLEAN_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst URL_CORE = {\n  name: 'url',\n  title: 'Url',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const UrlType = {\n  get() {\n    return URL_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(URL_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: URL_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst EMAIL_CORE = {\n  name: 'email',\n  title: 'Email',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const EmailType = {\n  get() {\n    return EMAIL_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(EMAIL_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: EMAIL_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst NUMBER_CORE = {\n  name: 'number',\n  title: 'Number',\n  type: null,\n  jsonType: 'number',\n}\n\nexport const NumberType = {\n  get() {\n    return NUMBER_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(NUMBER_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: NUMBER_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","interface Config {\n  enumerable?: boolean\n  writable?: boolean\n}\nexport function lazyGetter(target, key, getter, config: Config = {}) {\n  Object.defineProperty(target, key, {\n    configurable: true,\n    enumerable: config.enumerable !== false,\n    get() {\n      const val = getter()\n      Object.defineProperty(target, key, {\n        value: val,\n        writable: Boolean(config.writable),\n        configurable: false,\n      })\n      return val\n    },\n  })\n  return target\n}\n\n//\n// const o = lazyGetter({}, 'expensive', function() {\n//   console.log('doing expensive calculations')\n//   return 'RESULT OF EXPENSIVE'\n// })\n//\n// console.log(o.expensive)\n// console.log(o.expensive)\n// console.log(o.expensive)\n","import {pick} from 'lodash'\n\nfunction isEmpty(object) {\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction _stringify(value, options, depth) {\n  if (depth > options.maxDepth) {\n    return '...'\n  }\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return '[empty]'\n    }\n    const capLength = Math.max(value.length - options.maxBreadth)\n    const asString = value\n      .slice(0, options.maxBreadth)\n      .map((item, index) => _stringify(item, options, depth + 1))\n      .concat(capLength > 0 ? `…+${capLength}` : [])\n      .join(', ')\n\n    return depth === 0 ? asString : `[${asString}]`\n  }\n  if (typeof value === 'object' && value !== null) {\n    const keys = Object.keys(value).filter(\n      (key) => !options.ignoreKeys.includes(key) && typeof value[key] !== 'undefined'\n    )\n\n    if (isEmpty(pick(value, keys))) {\n      return '{empty}'\n    }\n\n    const asString = keys\n      .slice(0, options.maxBreadth)\n      .map((key) => `${key}: ${_stringify(value[key], options, depth + 1)}`)\n      .join(', ')\n\n    return depth === 0 ? asString : `{${asString}}`\n  }\n  const asString = String(value)\n  return asString === '' ? '\"\"' : asString\n}\n\nexport default function stringify(\n  value,\n  options: {maxDepth?: number; maxBreadth?: number; ignoreKeys?: string[]} = {}\n) {\n  const opts = {\n    maxDepth: 'maxDepth' in options ? options.maxDepth : 2,\n    maxBreadth: 'maxBreadth' in options ? options.maxBreadth : 2,\n    ignoreKeys: 'ignoreKeys' in options ? options.ignoreKeys : [],\n  }\n  return _stringify(value, opts, 0)\n}\n","import {pick} from 'lodash'\nimport stringify from './JSONStringifyHuman'\n\nconst OPTIONS = {\n  maxEntries: 2,\n  maxDepth: 2,\n  maxBreadth: 2,\n  ignoreKeys: ['_id', '_type', '_key', '_ref'],\n}\n\nexport function createFallbackPrepare(fieldNames) {\n  return (value) => ({\n    title: stringify(pick(value, fieldNames), OPTIONS),\n  })\n}\n","type FieldDef = {\n  type: string\n  name: string\n  of?: {type: string}[]\n}\n\nexport function isBlockField(field: FieldDef): boolean {\n  return field.type === 'array' && field.of && field.of.some((member) => member.type === 'block')\n}\n","import {omitBy, isUndefined} from 'lodash'\nimport arrify from 'arrify'\nimport {createFallbackPrepare} from './fallbackPrepare'\nimport {isBlockField} from './portableText'\n\nconst TITLE_CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption']\nconst DESCRIPTION_CANDIDATES = ['description', ...TITLE_CANDIDATES]\n\nfunction fieldHasReferenceTo(fieldDef, refType) {\n  return arrify(fieldDef.to || []).some((memberTypeDef) => memberTypeDef.type === refType)\n}\n\nfunction isImageAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.imageAsset')\n}\n\nfunction resolveImageAssetPath(typeDef) {\n  const fields = typeDef.fields || []\n  const imageAssetField = fields.find(isImageAssetField)\n  if (imageAssetField) {\n    return imageAssetField.name\n  }\n  const fieldWithImageAsset = fields.find((fieldDef) =>\n    (fieldDef.fields || []).some(isImageAssetField)\n  )\n\n  return fieldWithImageAsset ? `${fieldWithImageAsset.name}.asset` : undefined\n}\n\nfunction isFileAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.fileAsset')\n}\n\nfunction resolveFileAssetPath(typeDef) {\n  const fields = typeDef.fields || []\n  const assetField = fields.find(isFileAssetField)\n  if (assetField) {\n    return assetField.name\n  }\n  const fieldWithFileAsset = fields.find((fieldDef) =>\n    (fieldDef.fields || []).some(isFileAssetField)\n  )\n  return fieldWithFileAsset ? `${fieldWithFileAsset.name}.asset` : undefined\n}\n\nexport default function guessPreviewFields(rawObjectTypeDef) {\n  const objectTypeDef = {fields: [], ...rawObjectTypeDef}\n\n  const stringFieldNames = objectTypeDef.fields\n    .filter((field) => field.type === 'string')\n    .map((field) => field.name)\n\n  const blockFieldNames = objectTypeDef.fields.filter(isBlockField).map((field) => field.name)\n\n  // Check if we have fields with names that is listed in candidate fields\n  let titleField = TITLE_CANDIDATES.find(\n    (candidate) => stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate)\n  )\n\n  let descField = DESCRIPTION_CANDIDATES.find(\n    (candidate) =>\n      candidate !== titleField &&\n      (stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate))\n  )\n\n  if (!titleField) {\n    // Pick first defined string field\n    titleField = stringFieldNames[0] || blockFieldNames[0]\n    // Pick next as desc\n    descField = stringFieldNames[1] || blockFieldNames[1]\n  }\n\n  const mediaField = objectTypeDef.fields.find((field) => field.type === 'image')\n\n  const imageAssetPath = resolveImageAssetPath(objectTypeDef)\n\n  if (!titleField) {\n    const fileAssetPath = resolveFileAssetPath(objectTypeDef)\n    if (fileAssetPath) {\n      titleField = `${fileAssetPath}.originalFilename`\n    }\n    if (imageAssetPath) {\n      titleField = `${imageAssetPath}.originalFilename`\n    }\n  }\n\n  if (!titleField && !imageAssetPath) {\n    // last resort, pick all fields and concat them\n    const fieldNames = objectTypeDef.fields.map((field) => field.name)\n    const fieldMapping = fieldNames.reduce((acc, fieldName) => {\n      acc[fieldName] = fieldName\n      return acc\n    }, {})\n\n    return {\n      select: fieldMapping,\n      prepare: createFallbackPrepare(fieldNames),\n    }\n  }\n\n  const select = omitBy(\n    {\n      title: titleField,\n      description: descField,\n      media: mediaField ? mediaField.name : imageAssetPath,\n    },\n    isUndefined\n  )\n\n  return {\n    select: select,\n  }\n}\n","export function warnIfPreviewOnOptions(type) {\n  if (type.options && type.options.preview) {\n    // eslint-disable-next-line no-console\n    console.warn(`Heads up! The preview config is no longer defined on \"options\", but instead on the type/field itself.\nPlease move {options: {preview: ...}} to {..., preview: ...} on the type/field definition of \"${type.name}\".\n`)\n  }\n}\n\nexport function warnIfPreviewHasFields(type) {\n  const preview = type.preview || (type.options || {}).preview\n  if (preview && 'fields' in preview) {\n    // eslint-disable-next-line no-console\n    console.warn(`Heads up! \"preview.fields\" should be renamed to \"preview.select\". Please update the preview config for \"${type.name}\".\n`)\n  }\n}\n","import {pick} from 'lodash'\nimport guessPreviewConfig from './guessPreviewConfig'\nimport {warnIfPreviewOnOptions, warnIfPreviewHasFields} from './deprecationUtils'\n\nfunction parseSelection(selection) {\n  return selection.reduce((acc, field) => {\n    acc[field] = field\n    return acc\n  }, {})\n}\n\nfunction parsePreview(preview) {\n  if (!preview) {\n    return preview\n  }\n  const select = preview.select || preview.fields || {}\n  if (Array.isArray(select)) {\n    return {\n      ...pick(preview, ['prepare', 'component']),\n      select: parseSelection(select),\n    }\n  }\n  return {\n    ...pick(preview, ['prepare', 'component']),\n    select,\n  }\n}\n\nexport default function createPreviewGetter(objectTypeDef) {\n  return function previewGetter() {\n    warnIfPreviewOnOptions(objectTypeDef)\n    warnIfPreviewHasFields(objectTypeDef)\n    const preview = parsePreview(objectTypeDef.preview || (objectTypeDef.options || {}).preview)\n    return preview || guessPreviewConfig(objectTypeDef)\n  }\n}\n","import {capitalize, startCase} from 'lodash'\n\nconst CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption', 'description']\n\nconst PRIMITIVES = ['string', 'boolean', 'number']\n\nconst isPrimitive = (field) => PRIMITIVES.includes(field.type)\n\nexport default function guessOrderingConfig(objectTypeDef) {\n  let candidates = CANDIDATES.filter((candidate) =>\n    objectTypeDef.fields.some((field) => isPrimitive(field) && field.name === candidate)\n  )\n\n  // None of the candidates were found, fallback to all fields\n  if (candidates.length === 0) {\n    candidates = objectTypeDef.fields.filter(isPrimitive).map((field) => field.name)\n  }\n\n  return candidates.map((name) => ({\n    name: name,\n    title: capitalize(startCase(name)),\n    by: [{field: name, direction: 'asc'}],\n  }))\n}\n","import {isPlainObject, toPath} from 'lodash'\n\nexport function normalizeSearchConfigs(configs) {\n  if (!Array.isArray(configs)) {\n    throw new Error(\n      'The search config of a document type must be an array of search config objects'\n    )\n  }\n  return configs.map((conf) => {\n    if (conf === 'defaults') {\n      return conf\n    }\n    if (!isPlainObject(conf)) {\n      throw new Error('Search config must be an object of {path: string, weight: number}')\n    }\n    return {\n      weight: 'weight' in conf ? conf.weight : 1,\n      path: toPath(conf.path),\n      mapWith: typeof conf.mapWith === 'string' ? conf.mapWith : undefined,\n    }\n  })\n}\n","import {uniqBy} from 'lodash'\n\nconst stringFieldsSymbol = Symbol('__cachedStringFields')\n\nconst isReference = (type) => type.type && type.type.name === 'reference'\n\nconst portableTextFields = ['style', 'list']\nconst isPortableTextBlock = (type) =>\n  type.name === 'block' || (type.type && isPortableTextBlock(type.type))\nconst isPortableTextArray = (type) =>\n  type.jsonType === 'array' && Array.isArray(type.of) && type.of.some(isPortableTextBlock)\n\nfunction reduceType(type, reducer, acc, path = [], maxDepth) {\n  if (maxDepth < 0) {\n    return acc\n  }\n\n  const accumulator = reducer(acc, type, path)\n  if (type.jsonType === 'array' && Array.isArray(type.of)) {\n    return reduceArray(type, reducer, accumulator, path, maxDepth)\n  }\n\n  if (type.jsonType === 'object' && Array.isArray(type.fields) && !isReference(type)) {\n    return reduceObject(type, reducer, accumulator, path, maxDepth)\n  }\n\n  return accumulator\n}\n\nfunction reduceArray(arrayType, reducer, accumulator, path, maxDepth) {\n  return arrayType.of.reduce(\n    (acc, ofType) => reduceType(ofType, reducer, acc, path, maxDepth - 1),\n    accumulator\n  )\n}\n\nfunction reduceObject(objectType, reducer, accumulator, path, maxDepth) {\n  const isPtBlock = isPortableTextBlock(objectType)\n  return objectType.fields.reduce((acc, field) => {\n    // Don't include styles and list types as searchable paths for portable text blocks\n    if (isPtBlock && portableTextFields.includes(field.name)) {\n      return acc\n    }\n\n    const segment = [field.name].concat(field.type.jsonType === 'array' ? [[]] : [])\n    return reduceType(field.type, reducer, acc, path.concat(segment), maxDepth - 1)\n  }, accumulator)\n}\n\nconst BASE_WEIGHTS = [\n  {weight: 1, path: ['_id']},\n  {weight: 1, path: ['_type']},\n]\n\nconst PREVIEW_FIELD_WEIGHT_MAP = {\n  title: 10,\n  subtitle: 5,\n  description: 1.5,\n}\n\n/**\n * @internal\n */\nexport function deriveFromPreview(type: {\n  preview: {select: Record<string, string>}\n}): {weight?: number; path: (string | number)[]}[] {\n  const select = type?.preview?.select\n\n  if (!select) {\n    return []\n  }\n\n  return Object.keys(select)\n    .filter((fieldName) => fieldName in PREVIEW_FIELD_WEIGHT_MAP)\n    .map((fieldName) => ({\n      weight: PREVIEW_FIELD_WEIGHT_MAP[fieldName],\n      path: select[fieldName].split('.'),\n    }))\n}\n\nfunction getCachedStringFieldPaths(type, maxDepth) {\n  if (!type[stringFieldsSymbol]) {\n    type[stringFieldsSymbol] = uniqBy(\n      [\n        ...BASE_WEIGHTS,\n        ...deriveFromPreview(type),\n        ...getStringFieldPaths(type, maxDepth).map((path) => ({weight: 1, path})),\n        ...getPortableTextFieldPaths(type, maxDepth).map((path) => ({\n          weight: 1,\n          path,\n          mapWith: 'pt::text',\n        })),\n      ],\n      (spec) => spec.path.join('.')\n    )\n  }\n  return type[stringFieldsSymbol]\n}\n\nfunction getCachedBaseFieldPaths(type) {\n  if (!type[stringFieldsSymbol]) {\n    type[stringFieldsSymbol] = uniqBy([...BASE_WEIGHTS, ...deriveFromPreview(type)], (spec) =>\n      spec.path.join('.')\n    )\n  }\n  return type[stringFieldsSymbol]\n}\n\nfunction getStringFieldPaths(type, maxDepth) {\n  const reducer = (accumulator, childType, path) =>\n    childType.jsonType === 'string' ? [...accumulator, path] : accumulator\n\n  return reduceType(type, reducer, [], [], maxDepth)\n}\n\nfunction getPortableTextFieldPaths(type, maxDepth) {\n  const reducer = (accumulator, childType, path) =>\n    isPortableTextArray(childType) ? [...accumulator, path] : accumulator\n\n  return reduceType(type, reducer, [], [], maxDepth)\n}\n\nexport function resolveSearchConfigForBaseFieldPaths(type) {\n  return getCachedBaseFieldPaths(type)\n}\n\nexport default function resolveSearchConfig(type) {\n  return getCachedStringFieldPaths(type, 4)\n}\n","import {castArray, flatMap, keyBy, pick, startCase} from 'lodash'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport guessOrderingConfig from '../ordering/guessOrderingConfig'\nimport {normalizeSearchConfigs} from '../searchConfig/normalize'\nimport resolveSearchConfig from '../searchConfig/resolve'\nimport {lazyGetter} from './utils'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [\n  ...DEFAULT_OVERRIDEABLE_FIELDS,\n  'orderings',\n  '__experimental_search',\n  'blockEditor',\n  'icon',\n]\n\nexport const ObjectType = {\n  get() {\n    return {\n      name: 'object',\n      title: 'Object',\n      type: null,\n      jsonType: 'object',\n    }\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const subTypeDef = {fields: [], ...rawSubTypeDef}\n\n    const options = {...(subTypeDef.options || {})}\n    const parsed = Object.assign(pick(this.get(), OVERRIDABLE_FIELDS), subTypeDef, {\n      type: this.get(),\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n      options: options,\n      orderings: subTypeDef.orderings || guessOrderingConfig(subTypeDef),\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const {name, fieldset, group, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          group,\n          fieldset,\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'groups', () => {\n      return createFieldsGroups(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    lazyGetter(\n      parsed,\n      '__experimental_search',\n      () => {\n        const userProvidedSearchConfig = subTypeDef.__experimental_search\n          ? normalizeSearchConfigs(subTypeDef.__experimental_search)\n          : null\n\n        if (userProvidedSearchConfig) {\n          return userProvidedSearchConfig.map((entry) =>\n            entry === 'defaults' ? normalizeSearchConfigs(subTypeDef) : entry\n          )\n        }\n        return resolveSearchConfig(parsed)\n      },\n      {\n        enumerable: false,\n      }\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"object\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            title:\n              extensionDef.title ||\n              subTypeDef.title ||\n              (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n            type: parent,\n          })\n          lazyGetter(current, '__experimental_search', () => parent.__experimental_search)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nexport function createFieldsets(typeDef, fields) {\n  const fieldsetsDef = typeDef.fieldsets || []\n  const fieldsets = fieldsetsDef.map((fieldset) => {\n    const {name, title, description, options, group, hidden, readOnly} = fieldset\n    return {\n      name,\n      title,\n      description,\n      options,\n      group,\n      fields: [],\n      hidden,\n      readOnly,\n    }\n  })\n\n  const fieldsetsByName = keyBy(fieldsets, 'name')\n\n  return fields\n    .map((field) => {\n      if (field.fieldset) {\n        const fieldset = fieldsetsByName[field.fieldset]\n        if (!fieldset) {\n          throw new Error(\n            `Fieldset '${field.fieldset}' is not defined in schema for type '${typeDef.name}'`\n          )\n        }\n        fieldset.fields.push(field)\n        // Return the fieldset if its the first time we encounter a field in this fieldset\n        return fieldset.fields.length === 1 ? fieldset : null\n      }\n      return {single: true, field}\n    })\n    .filter(Boolean)\n}\n\nfunction createFieldsGroups(typeDef, fields) {\n  const groupsDef = typeDef.groups || []\n  const groups = groupsDef.map((group) => {\n    const {name, title, description, icon, readOnly, hidden} = group\n    return {\n      name,\n      title,\n      description,\n      icon,\n      readOnly,\n      default: group.default,\n      hidden,\n      fields: [],\n    }\n  })\n\n  const defaultGroups = groups.filter((group) => group.default)\n\n  if (defaultGroups.length > 1) {\n    // Throw if you have multiple default field groups defined\n    throw new Error(\n      `You currently have ${defaultGroups.length} default field groups defined for type '${\n        typeDef.name ? startCase(typeDef.name) : typeDef.title ?? ``\n      }', but only 1 is supported`\n    )\n  }\n\n  const groupsByName = keyBy(groups, 'name')\n\n  fields.forEach((field) => {\n    if (field.group) {\n      const fieldGroupNames = castArray(field.group)\n\n      if (fieldGroupNames.length > 0) {\n        fieldGroupNames.forEach((fieldGroupName) => {\n          const currentGroup = groupsByName[fieldGroupName]\n\n          if (!currentGroup) {\n            throw new Error(\n              `Field group '${fieldGroupName}' is not defined in schema for type '${\n                typeDef.name ?? typeDef.title ?? ``\n              }'`\n            )\n          }\n\n          currentGroup.fields.push(field)\n        })\n      }\n    }\n  })\n\n  return flatMap(groupsByName).filter((group) => group.fields.length > 0)\n}\n","import arrify from 'arrify'\nimport {pick} from 'lodash'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference',\n  type: 'boolean',\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst REFERENCE_CORE = {\n  name: 'reference',\n  title: 'Reference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr, conjunction) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type) {\n  if (!type.to || type.to.length === 0) {\n    return 'Reference'\n  }\n  return `Reference to ${humanize(\n    arrify(type.to).map((toType) => toType.title),\n    'or'\n  ).toLowerCase()}`\n}\n\nexport const ReferenceType = {\n  get() {\n    return REFERENCE_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in reference definition. Check the type ${subTypeDef.name}`\n      )\n    }\n    const parsed = Object.assign(pick(REFERENCE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: REFERENCE_CORE,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType) => createMemberType(toType))\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import arrify from 'arrify'\nimport {capitalize, pick} from 'lodash'\nimport {resolveSearchConfigForBaseFieldPaths} from '../searchConfig/resolve'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference marker',\n  type: 'boolean',\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst CROSS_DATASET_REFERENCE_CORE = {\n  name: 'crossDatasetReference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr, conjunction) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type) {\n  if (!type.to || type.to.length === 0) {\n    return 'Cross dataset Reference'\n  }\n  return `Cross dataset reference to ${humanize(\n    arrify(type.to).map((toType) => toType.title || capitalize(toType.type)),\n    'or'\n  ).toLowerCase()}`\n}\n\nexport const CrossDatasetReferenceType = {\n  get() {\n    return CROSS_DATASET_REFERENCE_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in cross dataset reference definition. Check the type ${subTypeDef.name}`\n      )\n    }\n    const parsed = Object.assign(\n      pick(CROSS_DATASET_REFERENCE_CORE, OVERRIDABLE_FIELDS),\n      subTypeDef,\n      {\n        type: CROSS_DATASET_REFERENCE_CORE,\n      }\n    )\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType) => {\n        return {\n          ...toType,\n          // eslint-disable-next-line camelcase\n          __experimental_search: resolveSearchConfigForBaseFieldPaths(toType),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: [{type: 'sanity.imageAsset'}],\n}\n\nexport const HOTSPOT_FIELD = {\n  name: 'hotspot',\n  type: 'sanity.imageHotspot',\n}\n\nexport const CROP_FIELD = {\n  name: 'crop',\n  type: 'sanity.imageCrop',\n}\n","import {pick, startCase} from 'lodash'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {lazyGetter} from './utils'\nimport {ASSET_FIELD, HOTSPOT_FIELD, CROP_FIELD} from './image/fieldDefs'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst IMAGE_CORE = {\n  name: 'image',\n  title: 'Image',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const ImageType = {\n  get() {\n    return IMAGE_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    let hotspotFields = [HOTSPOT_FIELD, CROP_FIELD]\n    if (!options.hotspot) {\n      hotspotFields = hotspotFields.map((field) => ({...field, hidden: true}))\n    }\n\n    const fields = [ASSET_FIELD, ...hotspotFields, ...(subTypeDef.fields || [])]\n\n    const parsed = Object.assign(pick(IMAGE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: IMAGE_CORE,\n      title: subTypeDef.title || startCase(subTypeDef.name || subTypeDef.type || ''),\n      options: options,\n      isCustomized: Boolean(subTypeDef.fields),\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, fieldset, ...type} = fieldDef\n        return {\n          name: name,\n          fieldset,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"image\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\n\nexport const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: {type: 'sanity.fileAsset'},\n}\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst FILE_CORE = {\n  name: 'file',\n  title: 'File',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {\n  accept: '',\n}\n\nexport const FileType = {\n  get() {\n    return FILE_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const fields = [ASSET_FIELD, ...(subTypeDef.fields || [])]\n\n    const parsed = Object.assign(pick(FILE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: FILE_CORE,\n      options: options,\n      isCustomized: Boolean(subTypeDef.fields),\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, fieldset, ...type} = fieldDef\n        return {\n          name: name,\n          fieldset,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"file\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {ObjectType} from './object'\n\nconst DOCUMENT_CORE = {\n  name: 'document',\n  title: 'Document',\n  type: null,\n  jsonType: 'object',\n}\n\nexport const DocumentType = {\n  get() {\n    return DOCUMENT_CORE\n  },\n  extend: ObjectType.extend,\n}\n","import {pick} from 'lodash'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ARRAY_CORE = {\n  name: 'array',\n  type: null,\n  jsonType: 'array',\n  of: [],\n}\n\nexport const ArrayType = {\n  get() {\n    return ARRAY_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    const parsed = Object.assign(pick(ARRAY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: ARRAY_CORE,\n    })\n    lazyGetter(parsed, 'of', () => {\n      return subTypeDef.of.map((ofTypeDef) => {\n        return createMemberType(ofTypeDef)\n      })\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export const DEFAULT_LINK_ANNOTATION = {\n  type: 'object',\n  name: 'link',\n  options: {\n    modal: {type: 'popover'},\n  },\n  fields: [\n    {\n      name: 'href',\n      type: 'url',\n      title: 'Url',\n      validation: (Rule) =>\n        Rule.uri({\n          scheme: ['http', 'https', 'tel', 'mailto'],\n          allowRelative: true,\n        }),\n    },\n  ],\n}\n\nexport const DEFAULT_TEXT_FIELD = {\n  type: 'text',\n  name: 'text',\n  title: 'Text',\n}\n\nexport const DEFAULT_MARKS_FIELD = {\n  name: 'marks',\n  type: 'array',\n  of: [{type: 'string'}],\n  title: 'Marks',\n}\n\nexport const LIST_TYPES = {\n  bullet: {title: 'Bullet', value: 'bullet'},\n  numbered: {title: 'Numbered', value: 'number'},\n}\n\nexport const DEFAULT_LIST_TYPES = [LIST_TYPES.bullet, LIST_TYPES.numbered]\n\nexport const BLOCK_STYLES = {\n  normal: {title: 'Normal', value: 'normal'},\n  h1: {title: 'Heading 1', value: 'h1'},\n  h2: {title: 'Heading 2', value: 'h2'},\n  h3: {title: 'Heading 3', value: 'h3'},\n  h4: {title: 'Heading 4', value: 'h4'},\n  h5: {title: 'Heading 5', value: 'h5'},\n  h6: {title: 'Heading 6', value: 'h6'},\n  blockquote: {title: 'Quote', value: 'blockquote'},\n}\n\nexport const DEFAULT_BLOCK_STYLES = [\n  BLOCK_STYLES.normal,\n  BLOCK_STYLES.h1,\n  BLOCK_STYLES.h2,\n  BLOCK_STYLES.h3,\n  BLOCK_STYLES.h4,\n  BLOCK_STYLES.h5,\n  BLOCK_STYLES.h6,\n  BLOCK_STYLES.blockquote,\n]\n\nexport const DECORATOR_STRONG = {title: 'Strong', value: 'strong'}\nexport const DECORATOR_EMPHASIS = {title: 'Emphasis', value: 'em'}\nexport const DECORATOR_CODE = {title: 'Code', value: 'code'}\nexport const DECORATOR_UNDERLINE = {title: 'Underline', value: 'underline'}\nexport const DECORATOR_STRIKE = {title: 'Strike', value: 'strike-through'}\n\nexport const DECORATORS = {\n  strong: DECORATOR_STRONG,\n  em: DECORATOR_EMPHASIS,\n  code: DECORATOR_CODE,\n  underline: DECORATOR_UNDERLINE,\n  strikeThrough: DECORATOR_STRIKE,\n}\n\nexport const DEFAULT_DECORATORS = [\n  DECORATORS.strong,\n  DECORATORS.em,\n  DECORATORS.code,\n  DECORATORS.underline,\n  DECORATORS.strikeThrough,\n]\n","import {pick} from 'lodash'\nimport {lazyGetter} from '../utils'\nimport createPreviewGetter from '../../preview/createPreviewGetter'\n\nimport {\n  BLOCK_STYLES,\n  DEFAULT_BLOCK_STYLES,\n  DEFAULT_LINK_ANNOTATION,\n  DEFAULT_LIST_TYPES,\n  DEFAULT_MARKS_FIELD,\n  DEFAULT_TEXT_FIELD,\n  DEFAULT_DECORATORS,\n} from './defaults'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst BLOCK_CORE = {\n  name: 'block',\n  title: 'Block',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const BlockType = {\n  get() {\n    return BLOCK_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {marks, styles, lists, of, ...rest} = subTypeDef\n\n    const childrenField = createChildrenField(marks, of)\n    const styleField = createStyleField(styles)\n    const listField = createListField(lists)\n\n    const markDefsField = {\n      name: 'markDefs',\n      title: 'Mark definitions',\n      type: 'array',\n      of: marks?.annotations || DEFAULT_ANNOTATIONS,\n    }\n\n    // NOTE: if you update this (EVEN THE ORDER OF FIELDS) you _NEED TO_ also\n    // update `BlockSchemaType`, `isBlockSchemaType` and similar in `@sanity/types`\n    const fields = [childrenField, styleField, listField, markDefsField].concat(\n      subTypeDef.fields || []\n    )\n\n    const parsed = Object.assign(pick(BLOCK_CORE, INHERITED_FIELDS), rest, {\n      type: BLOCK_CORE,\n      options: options,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"block\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, INHERITED_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nfunction ensureNormalStyle(styles) {\n  return styles.some((style) => style.value === 'normal')\n    ? styles\n    : [BLOCK_STYLES.normal, ...styles]\n}\n\nfunction createStyleField(styles) {\n  return {\n    name: 'style',\n    title: 'Style',\n    type: 'string',\n    options: {\n      list: ensureNormalStyle(styles || DEFAULT_BLOCK_STYLES),\n    },\n  }\n}\n\nfunction createListField(lists) {\n  return {\n    name: 'list',\n    title: 'List type',\n    type: 'string',\n    options: {\n      list: lists || DEFAULT_LIST_TYPES,\n    },\n  }\n}\n\nconst DEFAULT_ANNOTATIONS = [DEFAULT_LINK_ANNOTATION]\n\nfunction createChildrenField(marks, of = []) {\n  return {\n    name: 'children',\n    title: 'Content',\n    type: 'array',\n    of: [\n      {\n        type: 'span',\n        fields: [DEFAULT_TEXT_FIELD, DEFAULT_MARKS_FIELD],\n        annotations: marks && marks.annotations ? marks.annotations : DEFAULT_ANNOTATIONS,\n        decorators: marks && marks.decorators ? marks.decorators : DEFAULT_DECORATORS,\n      },\n      ...of.filter((memberType) => memberType.type !== 'span'),\n    ],\n  }\n}\n","import {pick} from 'lodash'\nimport {lazyGetter} from '../utils'\nimport createPreviewGetter from '../../preview/createPreviewGetter'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst SPAN_CORE = {\n  name: 'span',\n  title: 'Span',\n  type: null,\n  jsonType: 'object',\n}\n\nconst MARKS_FIELD = {\n  name: 'marks',\n  title: 'Marks',\n  type: 'array',\n  of: [{type: 'string'}],\n}\n\nconst TEXT_FIELD = {\n  name: 'text',\n  title: 'Text',\n  type: 'string',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const SpanType = {\n  get() {\n    return SPAN_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {annotations = [], marks = []} = subTypeDef\n\n    // NOTE: if you update this please also update `SpanSchemaType` in`@sanity/types`\n    const fields = [MARKS_FIELD, TEXT_FIELD]\n\n    const parsed = Object.assign(pick(SPAN_CORE, INHERITED_FIELDS), subTypeDef, {\n      type: SPAN_CORE,\n      options: options,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'annotations', () => annotations.map(extendMember))\n    lazyGetter(parsed, 'marks', () => marks.map(extendMember))\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"span\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, INHERITED_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import * as types from './types'\n\nfunction compileRegistry(schemaDef) {\n  const registry = Object.assign(Object.create(null), types)\n\n  const defsByName = schemaDef.types.reduce((acc, def) => {\n    if (acc[def.name]) {\n      throw new Error(`Duplicate type name added to schema: ${def.name}`)\n    }\n    acc[def.name] = def\n    return acc\n  }, {})\n\n  schemaDef.types.forEach(add)\n\n  return registry\n\n  function ensure(typeName) {\n    if (!registry[typeName]) {\n      if (!defsByName[typeName]) {\n        throw new Error(`Unknown type: ${typeName}`)\n      }\n      add(defsByName[typeName])\n    }\n  }\n\n  function extendMember(memberDef) {\n    ensure(memberDef.type)\n    return registry[memberDef.type].extend(memberDef, extendMember).get()\n  }\n\n  function add(typeDef) {\n    ensure(typeDef.type)\n    if (registry[typeDef.name]) {\n      return\n    }\n    registry[typeDef.name] = registry[typeDef.type].extend(typeDef, extendMember)\n  }\n}\n\n/**\n * @beta\n */\nexport default class Schema {\n  _original: {name: string; types: any[]}\n  _registry: {[typeName: string]: any}\n\n  static compile(schemaDef: any): Schema {\n    return new Schema(schemaDef)\n  }\n\n  constructor(schemaDef: any) {\n    this._original = schemaDef\n    this._registry = compileRegistry(schemaDef)\n  }\n\n  get name(): string {\n    return this._original.name\n  }\n\n  get(name: string): any {\n    return this._registry[name] && this._registry[name].get()\n  }\n\n  has(name: string): boolean {\n    return name in this._registry\n  }\n\n  getTypeNames(): string[] {\n    return Object.keys(this._registry)\n  }\n}\n"],"names":["DEFAULT_OVERRIDEABLE_FIELDS","OVERRIDABLE_FIELDS","ANY_CORE","name","type","jsonType","AnyType","get","extend","subTypeDef","extendMember","parsed","Object","assign","pick","of","map","fieldDef","omit","subtype","parent","extensionDef","Error","current","primitivePreview","prepare","val","title","String","STRING_CORE","StringType","preview","TEXT_CORE","TextType","DATETIME_CORE","DateTimeType","DATE_CORE","DateType","BOOLEAN_CORE","BooleanType","URL_CORE","UrlType","EMAIL_CORE","EmailType","NUMBER_CORE","NumberType","lazyGetter","target","key","getter","config","defineProperty","configurable","enumerable","value","writable","Boolean","isEmpty","object","hasOwnProperty","_stringify","options","depth","maxDepth","Array","isArray","length","capLength","Math","max","maxBreadth","asString","slice","item","index","concat","join","keys","filter","ignoreKeys","includes","stringify","opts","OPTIONS","maxEntries","createFallbackPrepare","fieldNames","isBlockField","field","some","member","TITLE_CANDIDATES","DESCRIPTION_CANDIDATES","fieldHasReferenceTo","refType","arrify","to","memberTypeDef","isImageAssetField","resolveImageAssetPath","typeDef","fields","imageAssetField","find","fieldWithImageAsset","isFileAssetField","resolveFileAssetPath","assetField","fieldWithFileAsset","guessPreviewFields","rawObjectTypeDef","objectTypeDef","stringFieldNames","blockFieldNames","titleField","candidate","descField","mediaField","imageAssetPath","fileAssetPath","fieldMapping","reduce","acc","fieldName","select","omitBy","description","media","isUndefined","warnIfPreviewOnOptions","console","warn","warnIfPreviewHasFields","parseSelection","selection","parsePreview","createPreviewGetter","previewGetter","guessPreviewConfig","CANDIDATES","PRIMITIVES","isPrimitive","guessOrderingConfig","candidates","capitalize","startCase","by","direction","normalizeSearchConfigs","configs","conf","isPlainObject","weight","path","toPath","mapWith","stringFieldsSymbol","Symbol","isReference","portableTextFields","isPortableTextBlock","isPortableTextArray","reduceType","reducer","accumulator","reduceArray","reduceObject","arrayType","ofType","objectType","isPtBlock","segment","BASE_WEIGHTS","PREVIEW_FIELD_WEIGHT_MAP","subtitle","deriveFromPreview","_a","split","getCachedStringFieldPaths","uniqBy","getStringFieldPaths","getPortableTextFieldPaths","spec","getCachedBaseFieldPaths","childType","resolveSearchConfigForBaseFieldPaths","resolveSearchConfig","ObjectType","rawSubTypeDef","createMemberType","orderings","fieldset","group","rest","compiledField","createFieldsets","createFieldsGroups","userProvidedSearchConfig","__experimental_search","entry","fieldsetsDef","fieldsets","hidden","readOnly","fieldsetsByName","keyBy","push","single","groupsDef","groups","icon","default","defaultGroups","groupsByName","forEach","fieldGroupNames","castArray","fieldGroupName","_b","currentGroup","flatMap","REF_FIELD","WEAK_FIELD","REFERENCE_FIELDS","REFERENCE_CORE","humanize","arr","conjunction","len","first","last","buildTitle","toType","toLowerCase","ReferenceType","CROSS_DATASET_REFERENCE_CORE","CrossDatasetReferenceType","ASSET_FIELD","HOTSPOT_FIELD","CROP_FIELD","IMAGE_CORE","DEFAULT_OPTIONS","ImageType","hotspotFields","hotspot","isCustomized","FILE_CORE","accept","FileType","DOCUMENT_CORE","DocumentType","ARRAY_CORE","ArrayType","ofTypeDef","DEFAULT_LINK_ANNOTATION","modal","validation","Rule","uri","scheme","allowRelative","DEFAULT_TEXT_FIELD","DEFAULT_MARKS_FIELD","LIST_TYPES","bullet","numbered","DEFAULT_LIST_TYPES","BLOCK_STYLES","normal","h1","h2","h3","h4","h5","h6","blockquote","DEFAULT_BLOCK_STYLES","DECORATOR_STRONG","DECORATOR_EMPHASIS","DECORATOR_CODE","DECORATOR_UNDERLINE","DECORATOR_STRIKE","DECORATORS","strong","em","code","underline","strikeThrough","DEFAULT_DECORATORS","INHERITED_FIELDS","BLOCK_CORE","BlockType","marks","styles","lists","childrenField","createChildrenField","styleField","createStyleField","listField","createListField","markDefsField","annotations","DEFAULT_ANNOTATIONS","ensureNormalStyle","style","list","decorators","memberType","SPAN_CORE","MARKS_FIELD","TEXT_FIELD","SpanType","compileRegistry","schemaDef","registry","create","types","defsByName","def","add","ensure","typeName","memberDef","Schema","compile","constructor","_original","_registry","has","getTypeNames"],"mappings":"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"}