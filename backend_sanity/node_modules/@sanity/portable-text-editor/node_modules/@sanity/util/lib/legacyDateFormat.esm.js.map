{"version":3,"file":"legacyDateFormat.esm.js","sources":["../src/legacyDateFormat.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport moment from 'moment'\n\nexport type ParseResult = {isValid: boolean; date?: Date; error?: string} & (\n  | {isValid: true; date: Date}\n  | {isValid: false; error?: string}\n)\n\n// todo: find a way to get rid of moment there.\n// note: the format comes form peoples schemas, so we need to deprecate it for a while and\n// find a way to tell people that they need to change it\nexport function format(input: Date, format: string) {\n  return moment(input).format(format)\n}\n\nexport function parse(dateString: string, format: string): ParseResult {\n  const parsed = moment(dateString, format, true)\n  if (parsed.isValid()) {\n    return {isValid: true, date: parsed.toDate()}\n  }\n  return {isValid: false, error: `Invalid date. Must be on the format \"${format}\"`}\n}\n"],"names":["format","input","moment","parse","dateString","parsed","isValid","date","toDate","error"],"mappings":";AAWgB,SAAAA,MAAA,CAAOC,OAAaD,OAAgB,EAAA;EAClD,OAAOE,MAAO,CAAAD,KAAK,CAAE,CAAAD,MAAA,CAAOA,OAAM,CAAA;AACpC;AAEgB,SAAAG,KAAA,CAAMC,YAAoBJ,OAA6B,EAAA;EACrE,MAAMK,MAAS,GAAAH,MAAA,CAAOE,UAAYJ,EAAAA,OAAAA,EAAQ,IAAI,CAAA;EAC1C,IAAAK,MAAA,CAAOC,SAAW,EAAA;IACpB,OAAO;MAACA,OAAS,EAAA,IAAA;MAAMC,IAAM,EAAAF,MAAA,CAAOG;KAAQ;EAC9C;EACA,OAAO;IAACF,OAAA,EAAS,KAAO;IAAAG,KAAA,kDAA+CT,OAAS;GAAA;AAClF;"}