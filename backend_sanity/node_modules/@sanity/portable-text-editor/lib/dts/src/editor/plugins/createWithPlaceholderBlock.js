import { Transforms } from 'slate';
import { debugWithName } from '../../utils/debug';
var debug = debugWithName('plugin:withPlaceholderBlock');
/**
 * Keep a "placeholder" block present when the editor is empty
 *
 */
export function createWithPlaceholderBlock(_a) {
    var portableTextFeatures = _a.portableTextFeatures, keyGenerator = _a.keyGenerator;
    return function withPlaceholderBlock(editor) {
        editor.createPlaceholderBlock = function () {
            return {
                _type: portableTextFeatures.types.block.name,
                _key: keyGenerator(),
                style: portableTextFeatures.styles[0].value,
                markDefs: [],
                children: [
                    {
                        _type: 'span',
                        _key: keyGenerator(),
                        text: '',
                        marks: [],
                    },
                ],
            };
        };
        var onChange = editor.onChange;
        // Make sure there's a placeholder block present if the editor's children become empty
        editor.onChange = function () {
            var hadSelection = !!editor.selection;
            onChange();
            if (editor.children.length === 0) {
                debug('Inserting placeholder block');
                Transforms.deselect(editor);
                // Set the value directly without using transforms as we don't want this to be producing any patches
                editor.children = [editor.createPlaceholderBlock()];
                if (hadSelection) {
                    Transforms.select(editor, {
                        focus: { path: [0, 0], offset: 0 },
                        anchor: { path: [0, 0], offset: 0 },
                    });
                }
                editor.onChange();
            }
        };
        return editor;
    };
}
//# sourceMappingURL=createWithPlaceholderBlock.js.map