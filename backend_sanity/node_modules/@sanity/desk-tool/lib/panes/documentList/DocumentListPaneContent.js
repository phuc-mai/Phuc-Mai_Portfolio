"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentListPaneContent = DocumentListPaneContent;
var _icons = require("@sanity/icons");
var _ui = require("@sanity/ui");
var _schema = _interopRequireDefault(require("part:@sanity/base/schema"));
var _draftUtils = require("part:@sanity/base/util/draft-utils");
var _react = _interopRequireWildcard(require("react"));
var _Delay = require("../../components/Delay");
var _pane = require("../../components/pane");
var _paneItem = require("../../components/paneItem");
var _helpers = require("./helpers");
var _constants = require("./constants");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function DocumentListPaneContent(props) {
  var childItemId = props.childItemId,
    error = props.error,
    filterIsSimpleTypeContraint = props.filterIsSimpleTypeContraint,
    fullList = props.fullList,
    isActive = props.isActive,
    isLoading = props.isLoading,
    items = props.items,
    layout = props.layout,
    onListChange = props.onListChange,
    onRetry = props.onRetry,
    showIcons = props.showIcons;
  var _usePaneLayout = (0, _pane.usePaneLayout)(),
    layoutCollapsed = _usePaneLayout.collapsed;
  var _usePane = (0, _pane.usePane)(),
    collapsed = _usePane.collapsed,
    index = _usePane.index;
  var _useState = (0, _react.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    shouldRender = _useState2[0],
    setShouldRender = _useState2[1];
  (0, _react.useEffect)(() => {
    if (collapsed) return undefined;
    var timer = setTimeout(() => {
      setShouldRender(true);
    }, 0);
    return () => {
      clearTimeout(timer);
    };
  }, [collapsed]);
  var renderItem = (0, _react.useCallback)(item => {
    var publishedId = (0, _draftUtils.getPublishedId)(item._id);
    var isSelected = childItemId === publishedId;
    var pressed = !isActive && isSelected;
    var selected = isActive && isSelected;
    return /*#__PURE__*/_react.default.createElement(_paneItem.PaneItem, {
      icon: showIcons === false ? false : undefined,
      id: publishedId,
      pressed: pressed,
      selected: selected,
      layout: layout,
      schemaType: _schema.default.get(item._type),
      value: item
    });
  }, [childItemId, isActive, layout, showIcons]);
  var content = (0, _react.useMemo)(() => {
    if (!shouldRender) {
      return null;
    }
    if (error) {
      return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
        align: "center",
        direction: "column",
        height: "fill",
        justify: "center"
      }, /*#__PURE__*/_react.default.createElement(_ui.Container, {
        width: 1
      }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
        paddingX: 4,
        paddingY: 5,
        space: 4
      }, /*#__PURE__*/_react.default.createElement(_ui.Heading, {
        as: "h3"
      }, "Could not fetch list items"), /*#__PURE__*/_react.default.createElement(_ui.Text, {
        as: "p"
      }, "Error: ", /*#__PURE__*/_react.default.createElement("code", null, error.message)), onRetry && /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_ui.Button, {
        icon: _icons.SyncIcon,
        onClick: onRetry,
        text: "Retry",
        tone: "primary"
      })))));
    }
    if (items === null) {
      return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
        align: "center",
        direction: "column",
        height: "fill",
        justify: "center"
      }, /*#__PURE__*/_react.default.createElement(_Delay.Delay, {
        ms: 300
      }, /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ui.Spinner, {
        muted: true
      }), /*#__PURE__*/_react.default.createElement(_ui.Box, {
        marginTop: 3
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
        align: "center",
        muted: true,
        size: 1
      }, "Loading documents\u2026")))));
    }
    if (!isLoading && items.length === 0) {
      return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
        align: "center",
        direction: "column",
        height: "fill",
        justify: "center"
      }, /*#__PURE__*/_react.default.createElement(_ui.Container, {
        width: 1
      }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
        paddingX: 4,
        paddingY: 5
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
        align: "center",
        muted: true,
        size: 2
      }, filterIsSimpleTypeContraint ? 'No documents of this type' : 'No matching documents'))));
    }
    var hasMoreItems = fullList && items.length === _constants.FULL_LIST_LIMIT;
    return /*#__PURE__*/_react.default.createElement(_ui.Box, {
      padding: 2
    }, items.length > 0 && /*#__PURE__*/_react.default.createElement(_ui.VirtualList, {
      gap: 1,
      getItemKey: _helpers.getDocumentKey,
      items: items,
      renderItem: renderItem,
      onChange: onListChange
      // prevents bug when panes won't render if first rendered while collapsed
      ,
      key: "".concat(index, "-").concat(collapsed)
    }), isLoading && /*#__PURE__*/_react.default.createElement(_ui.Card, {
      borderTop: true,
      marginTop: 1,
      paddingX: 3,
      paddingY: 4
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      align: "center",
      muted: true,
      size: 1
    }, "Loading\u2026")), hasMoreItems && /*#__PURE__*/_react.default.createElement(_ui.Card, {
      marginTop: 1,
      paddingX: 3,
      paddingY: 4,
      radius: 2,
      tone: "transparent"
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      align: "center",
      muted: true,
      size: 1
    }, "Displaying a maximum of ", _constants.FULL_LIST_LIMIT, " documents")));
  }, [error, filterIsSimpleTypeContraint, fullList, onListChange, isLoading, items, onRetry, renderItem, shouldRender, collapsed, index]);
  return /*#__PURE__*/_react.default.createElement(_pane.PaneContent, {
    overflow: layoutCollapsed ? undefined : 'auto'
  }, content);
}