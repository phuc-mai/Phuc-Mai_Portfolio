"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionMenuButton = ActionMenuButton;
var _autoId = require("@reach/auto-id");
var _components = require("@sanity/base/components");
var _icons = require("@sanity/icons");
var _ui = require("@sanity/ui");
var _react = _interopRequireWildcard(require("react"));
var _reactIs = require("react-is");
var _ActionStateDialog = require("./ActionStateDialog");
var _constants = require("./constants");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var popoverProps = {
  placement: 'top-end',
  portal: true,
  preventOverflow: true,
  tone: 'default'
};
function ActionMenuButton(props) {
  var actionStates = props.actionStates,
    disabled = props.disabled;
  var idPrefix = (0, _autoId.useId)() || '';
  var buttonRef = (0, _react.useRef)(null);
  var _useState = (0, _react.useState)(-1),
    _useState2 = _slicedToArray(_useState, 2),
    actionIndex = _useState2[0],
    setActionIndex = _useState2[1];
  var _useState3 = (0, _react.useState)(null),
    _useState4 = _slicedToArray(_useState3, 2),
    referenceElement = _useState4[0],
    setReferenceElement = _useState4[1];
  var handleAction = (0, _react.useCallback)(idx => {
    setActionIndex(idx);
  }, []);
  var currentAction = actionStates[actionIndex];
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ui.MenuButton, {
    id: "".concat(idPrefix, "-action-menu"),
    button: /*#__PURE__*/_react.default.createElement(_ui.Button, {
      "data-testid": "action-menu-button",
      "aria-label": "Open document actions",
      disabled: disabled,
      icon: _icons.ChevronDownIcon,
      mode: "ghost",
      ref: buttonRef
    }),
    menu: /*#__PURE__*/_react.default.createElement(_ui.Menu, {
      padding: 1
    }, actionStates.map((actionState, idx) => /*#__PURE__*/_react.default.createElement(ActionMenuListItem, {
      actionState: actionState,
      disabled: disabled,
      index: idx
      // eslint-disable-next-line react/no-array-index-key
      ,
      key: idx,
      onAction: handleAction
    }))),
    popover: popoverProps,
    ref: setReferenceElement
  }), currentAction && currentAction.dialog && /*#__PURE__*/_react.default.createElement(_components.LegacyLayerProvider, {
    zOffset: "paneFooter"
  }, /*#__PURE__*/_react.default.createElement(_ActionStateDialog.ActionStateDialog, {
    dialog: currentAction.dialog,
    referenceElement: referenceElement
  })));
}
function ActionMenuListItem(props) {
  var actionState = props.actionState,
    disabled = props.disabled,
    index = props.index,
    onAction = props.onAction;
  var onHandle = actionState.onHandle;
  var handleClick = (0, _react.useCallback)(() => {
    onAction(index);
    if (onHandle) onHandle();
  }, [index, onAction, onHandle]);
  var tooltipContent = actionState.title && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1
  }, actionState.title));
  return /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
    "data-testid": "action-".concat(actionState.label.replace(' ', '')),
    disabled: disabled || Boolean(actionState.disabled),
    onClick: handleClick,
    padding: 0,
    tone: actionState.color && _constants.LEGACY_BUTTON_COLOR_TO_TONE[actionState.color]
  }, /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    content: tooltipContent,
    disabled: !tooltipContent,
    fallbackPlacements: ['left', 'bottom'],
    placement: "top",
    portal: true
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    paddingX: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    flex: 1,
    paddingY: 3
  }, actionState.icon && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginRight: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, /*#__PURE__*/(0, _react.isValidElement)(actionState.icon) && actionState.icon, (0, _reactIs.isValidElementType)(actionState.icon) && /*#__PURE__*/(0, _react.createElement)(actionState.icon))), /*#__PURE__*/_react.default.createElement(_ui.Text, null, actionState.label)), actionState.shortcut && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginLeft: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Hotkeys, {
    keys: String(actionState.shortcut).split('+').map(s => s.slice(0, 1).toUpperCase() + s.slice(1))
  })))));
}