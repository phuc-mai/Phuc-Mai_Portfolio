"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateTimeInput = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactFocusLock = _interopRequireDefault(require("react-focus-lock"));
var _ui = require("@sanity/ui");
var _icons = require("@sanity/icons");
var _DatePicker = require("./DatePicker");
var _LazyTextInput = require("./LazyTextInput");
var _excluded = ["value", "inputValue", "onInputChange", "onChange", "selectTime", "timeStep"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var DateTimeInput = /*#__PURE__*/_react.default.forwardRef(function DateTimeInput(props, forwardedRef) {
  var value = props.value,
    inputValue = props.inputValue,
    onInputChange = props.onInputChange,
    onChange = props.onChange,
    selectTime = props.selectTime,
    timeStep = props.timeStep,
    rest = _objectWithoutProperties(props, _excluded);
  var _React$useState = _react.default.useState(null),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    popoverRef = _React$useState2[0],
    setPopoverRef = _React$useState2[1];
  var inputRef = (0, _ui.useForwardedRef)(forwardedRef);
  var buttonRef = _react.default.useRef(null);
  var _React$useState3 = _react.default.useState(false),
    _React$useState4 = _slicedToArray(_React$useState3, 2),
    isPickerOpen = _React$useState4[0],
    setPickerOpen = _React$useState4[1];
  (0, _ui.useClickOutside)(() => setPickerOpen(false), [popoverRef]);
  var handleDeactivation = (0, _react.useCallback)(() => {
    var _inputRef$current, _inputRef$current2;
    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();
    (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.select();
  }, [inputRef]);
  var handleKeyUp = (0, _react.useCallback)(e => {
    if (e.key === 'Escape') {
      setPickerOpen(false);
    }
  }, []);
  var handleClick = (0, _react.useCallback)(() => setPickerOpen(true), []);
  var suffix = /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
    ref: buttonRef,
    icon: _icons.CalendarIcon,
    mode: "bleed",
    padding: 2,
    onClick: handleClick,
    style: {
      display: 'block'
    },
    "data-testid": "select-date-button"
  }));
  return /*#__PURE__*/_react.default.createElement(_LazyTextInput.LazyTextInput, _extends({
    ref: inputRef
  }, rest, {
    value: inputValue,
    onChange: onInputChange,
    suffix: isPickerOpen ?
    /*#__PURE__*/
    // Note: we're conditionally inserting the popover here due to an
    // issue with popovers rendering incorrectly on subsequent renders
    // see https://github.com/sanity-io/design/issues/519
    _react.default.createElement(_ui.LayerProvider, {
      zOffset: 1000
    }, /*#__PURE__*/_react.default.createElement(_ui.Popover, {
      constrainSize: true,
      "data-testid": "date-input-dialog",
      portal: true,
      content: /*#__PURE__*/_react.default.createElement(_ui.Box, {
        overflow: "auto"
      }, /*#__PURE__*/_react.default.createElement(_reactFocusLock.default, {
        onDeactivation: handleDeactivation
      }, /*#__PURE__*/_react.default.createElement(_DatePicker.DatePicker, {
        selectTime: selectTime,
        timeStep: timeStep,
        onKeyUp: handleKeyUp,
        value: value,
        onChange: onChange
      }))),
      open: true,
      placement: "bottom-end",
      ref: setPopoverRef,
      radius: 2
    }, suffix)) : suffix
  }));
});
exports.DateTimeInput = DateTimeInput;