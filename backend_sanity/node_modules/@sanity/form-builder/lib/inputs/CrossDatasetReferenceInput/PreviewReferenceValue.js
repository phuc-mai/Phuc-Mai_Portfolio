"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PreviewReferenceValue = PreviewReferenceValue;
var _react = _interopRequireWildcard(require("react"));
var _ui = require("@sanity/ui");
var _CrossDatasetReferencePreview = require("./CrossDatasetReferencePreview");
var _getProjectId = require("./utils/getProjectId");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function PreviewReferenceValue(props) {
  var _referenceInfo$result;
  var value = props.value,
    type = props.type,
    showStudioUrlIcon = props.showStudioUrlIcon,
    hasStudioUrl = props.hasStudioUrl,
    referenceInfo = props.referenceInfo;
  var projectId = (0, _react.useMemo)(() => (0, _getProjectId.getProjectId)(), []);
  if (referenceInfo.isLoading || referenceInfo.error) {
    return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 2,
      padding: 1
    }, /*#__PURE__*/_react.default.createElement(_ui.TextSkeleton, {
      style: {
        maxWidth: 320
      },
      radius: 1,
      animated: !referenceInfo.error
    }), /*#__PURE__*/_react.default.createElement(_ui.TextSkeleton, {
      style: {
        maxWidth: 200
      },
      radius: 1,
      size: 1,
      animated: !referenceInfo.error
    }));
  }
  var showTypeLabel = type.to.length > 1;
  var refTypeName = (_referenceInfo$result = referenceInfo.result) === null || _referenceInfo$result === void 0 ? void 0 : _referenceInfo$result.type;
  var refType = type.to.find(toType => toType.type === refTypeName);
  if (referenceInfo.result.availability.available && !refType) {
    return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 2,
      padding: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      as: "p"
    }, "The referenced document is of invalid type: (", refTypeName || 'unknown', ")", /*#__PURE__*/_react.default.createElement("pre", null, JSON.stringify(value, null, 2))));
  }
  return /*#__PURE__*/_react.default.createElement(_CrossDatasetReferencePreview.CrossDatasetReferencePreview, {
    availability: referenceInfo.result.availability,
    hasStudioUrl: hasStudioUrl,
    showStudioUrlIcon: showStudioUrlIcon,
    preview: referenceInfo.result.preview,
    refType: refType,
    projectId: projectId,
    dataset: type.dataset,
    id: value._ref,
    showTypeLabel: showTypeLabel
  });
}